transferOwnership(address _newOwner) public ownerOnly {
        require(_newOwner != owner);
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public ownerOnly {
        require(_newOwner != owner);
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
            newOwner = _newOwner;
        }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {

        newOwner = _newOwner;

    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
      _transferOwnership(newOwner);
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
        require(newOwner != address(0));
        OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
        require(newOwner != address(0));
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address payable _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address payable _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0));
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address _newOwner) public {
	require(msg.sender == owner);
	owner = _newOwner;
    emit OwnershipTransferred(msg.sender,owner);
}
transferOwnership(address _newOwner) public {
    require(msg.sender == owner);
    owner = _newOwner;
    emit OwnershipTransferred(msg.sender,owner);
}
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public only_owner {
        owner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
    owner = newOwner;
  }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) external onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
            newOwner = _newOwner;
        }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {

        newOwner = _newOwner;

    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
            owner = newOwner;
        }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    delegate = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0));
        candidate = newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address payable _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {

        newOwner = _newOwner;

    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
            newOwner = _newOwner;
        }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        _transferOwnership(_newOwner);
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) external onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0), "cannot transfer ownership to address zero");
        emit OwnershipTransferred(owner, _newOwner);
        owner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address payable _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
    _transferOwnership(_newOwner);
  }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        require(_newOwner != address(0));
        newOwner = _newOwner;
    }
transferOwnership(address _newOwner) public onlyOwner {
        newOwner = _newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0), "Owner can't be set to zero address");
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
            owner = newOwner;
        }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    delegate = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0));
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
      _transferOwnership(newOwner);
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0));
        candidate = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        pendingOwner = newOwner;
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
        require(newOwner != address(0));
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
        require(newOwner != address(0));
        OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
transferOwnership(address newOwner) onlyOwner public {
    require(newOwner != address(0));
    OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
