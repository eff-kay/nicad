name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string) {
        return _name;
    }
name() public view returns (string) {
        return _name;
    }
name() public view returns(string) {
    return _name;
  }
name() public view returns (string) {
        return _name;
    }
name() public view returns(string) {
        return _name;
    }
name() public view returns(string) {
    return _name;
  }
name() external view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() public view returns (string);
    function symbol() public view returns (string);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="687" endline="688" pcid="936">
    function getFactoryAddress() external view returns(address);
}
</source>
<source file="systems/smart_contracts/AICRYPTO.sol" startline="47" endline="48" pcid="422">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="9" endline="10" pcid="2">
    function symbol() public view returns (string);
    function decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/MintedTokenCappedCrowdsaleExt.sol" startline="307" endline="309" pcid="4852">
  function isSane() public constant returns (bool);

  function distributeReservedTokens(uint reservedTokensDistributionBatch);
</source>
<source file="systems/smart_contracts/MintedTokenCappedCrowdsaleExt.sol" startline="944" endline="949" pcid="4890">
  function isCrowdsaleFull() public constant returns (bool);

  /**
   * Create new tokens or transfer issued tokens to the investor depending on the cap model.
   */
  function assignTokens(address receiver, uint tokenAmount) private;
</source>
<source file="systems/smart_contracts/MockOracle.sol" startline="81" endline="83" pcid="4927">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/MockOracle.sol" startline="339" endline="341" pcid="4947">
  function price() external view returns (uint256);

}
</source>
<source file="systems/smart_contracts/AoraCoin.sol" startline="16" endline="18" pcid="724">
  function totalSupply() external view returns (uint256);

  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/FUNNYTOKEN.sol" startline="36" endline="37" pcid="3945">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/Fuelcoin.sol" startline="8" endline="9" pcid="3912">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="1137" endline="1138" pcid="3908">
    function getFactoryAddress() external view returns(address);
}
</source>
<source file="systems/smart_contracts/Moshlink.sol" startline="921" endline="922" pcid="5040">
    function totalSupply() public view returns (uint256);
    function tokenOfOwnerByIndex(address owner, uint256 index) public view returns (uint256 tokenId);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="771" endline="772" pcid="3877">
    function totalSupply() external view returns (uint256);
    function balanceOf(address owner) external view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="770" endline="771" pcid="3876">
    function decimals() external view returns (uint8);
    function totalSupply() external view returns (uint256);
</source>
<source file="systems/smart_contracts/CGT.sol" startline="49" endline="50" pcid="1685">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="756" endline="757" pcid="3866">
    function getMembersNumber() external view returns (uint);
    function getMemberAddressByIndex(uint8) external view returns (address);
</source>
<source file="systems/smart_contracts/BlockbidLiquidity.sol" startline="20" endline="22" pcid="1362">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Melodic.sol" startline="50" endline="51" pcid="4782">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="744" endline="745" pcid="3854">
    function getFactoryDeployIndex() external view returns(uint);
    function isMemberInserted(address) external view returns(bool);
</source>
<source file="systems/smart_contracts/MULTIFOMO.sol" startline="55" endline="56" pcid="5087">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/MultipleArbitrableTokenTransaction.sol" startline="261" endline="266" pcid="5156">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="543" endline="544" pcid="3826">
    function paused() external view returns (bool);
    function pause() external;
</source>
<source file="systems/smart_contracts/BlockPoolToken.sol" startline="13" endline="14" pcid="1405">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="542" endline="543" pcid="3825">
    function decimals() external view returns (uint8);
    function paused() external view returns (bool);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="601" endline="602" pcid="160">
    function impl_quotaApply4Redeem() view public returns(uint256);
    function impl_apply4Redeem(address _from, uint256 _ms) public returns(uint256 ms2r);
</source>
<source file="systems/smart_contracts/MultiSendErc20.sol" startline="68" endline="69" pcid="5203">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/Multisig.sol" startline="8" endline="9" pcid="5211">
  function totalSupply() public view returns (uint);
  function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="246" endline="251" pcid="3804">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/DAITOKEN.sol" startline="9" endline="11" pcid="2296">
  function totalSupply() external view returns (uint256);

  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/BitDigit.sol" startline="42" endline="43" pcid="1245">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/Gacha.sol" startline="72" endline="74" pcid="3974">
    function totalSupply() public view returns (uint256);

    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="229" endline="230" pcid="3798">
    function getWLLength() external view returns(uint256);
    function setNewThreshold(uint256) external;
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="227" endline="228" pcid="3796">
    function getWLThresholdBalance() external view returns (uint256);
    function getMaxWLAmount(address) external view returns(uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="196" endline="197" pcid="3769">
    function getWalletOnTopAddress() external view returns (address);
    function setWalletOnTopAddress(address) external returns(address);
</source>
<source file="systems/smart_contracts/BOMBv3.sol" startline="12" endline="13" pcid="1459">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/FPDeployer.sol" startline="195" endline="196" pcid="3768">
    function getMinterAddress() external view returns(address);
    function getWalletOnTopAddress() external view returns (address);
</source>
<source file="systems/smart_contracts/NaorisToken.sol" startline="60" endline="61" pcid="5281">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/NBToken.sol" startline="13" endline="14" pcid="5295">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/NewVoken.sol" startline="146" endline="148" pcid="5342">
    function decimals() external view returns (uint8);

    function totalSupply() external view returns (uint256);
</source>
<source file="systems/smart_contracts/NewVoken.sol" startline="148" endline="149" pcid="5343">
    function totalSupply() external view returns (uint256);
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/NibiruGovernanceToken.sol" startline="163" endline="168" pcid="5416">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Deflacoin.sol" startline="12" endline="13" pcid="2386">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/AkropolisTokenVesting.sol" startline="17" endline="22" pcid="515">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/DNP.sol" startline="17" endline="18" pcid="2781">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/NSTTeamLock.sol" startline="18" endline="19" pcid="5454">
    function totalSupply() external view returns (uint256);
    function balanceOf(address owner) external view returns (uint256);
</source>
<source file="systems/smart_contracts/DepositRegistry.sol" startline="95" endline="100" pcid="2458">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ankara.sol" startline="25" endline="27" pcid="678">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Oracle.sol" startline="167" endline="168" pcid="5522">
  function withdrawable() external view returns (uint256);
}
</source>
<source file="systems/smart_contracts/OSManagerToken.sol" startline="28" endline="29" pcid="5547">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/PAYCASH.sol" startline="49" endline="50" pcid="5609">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/Perlin.sol" startline="50" endline="51" pcid="5638">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/_0xSatoshi.sol" startline="61" endline="62" pcid="225">
    function totalSupply() public view returns(uint);
    function balanceOf(address tokenOwner) public view returns(uint balance);
</source>
<source file="systems/smart_contracts/PoaOperator.sol" startline="313" endline="315" pcid="5685">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="519" endline="521" pcid="110">
    function tailOfQueue() public view returns(uint256);
    
    function setColdWallet(address _coldWallet, uint256 _ratioAutoSave, uint256 _ratioAutoRemain) public;
</source>
<source file="systems/smart_contracts/PokaToken.sol" startline="14" endline="16" pcid="5728">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="553" endline="554" pcid="133">
    function totalSupply() public view returns (uint256);
    function balanceOf(address _addr)public view returns(uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="98" endline="99" pcid="34">
    function token_name() public view returns (string);
    function token_symbol() public view returns (string);
</source>
<source file="systems/smart_contracts/DICCrowdsale.sol" startline="8" endline="9" pcid="2637">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/PositionTokenV2.sol" startline="19" endline="20" pcid="5743">
  function totalSupply() public view returns (uint256);
  function balanceOf(address _who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/MBFToken.sol" startline="451" endline="456" pcid="4763">
    function totalSupply()
        external
        view
        returns (uint256);

    function balanceOf(address _owner)
</source>
<source file="systems/smart_contracts/_DrSebiToken.sol" startline="106" endline="108" pcid="257">
    function totalSupply() public constant returns (uint);

    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/AnxToken.sol" startline="50" endline="51" pcid="706">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/FMT.sol" startline="10" endline="11" pcid="3645">
  function totalSupply() public view returns (uint256);
  function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/PPLL.sol" startline="11" endline="16" pcid="5769">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/BANG.sol" startline="12" endline="13" pcid="1035">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/PRIT.sol" startline="33" endline="34" pcid="5804">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/PropertyToken.sol" startline="78" endline="80" pcid="5837">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/MBA.sol" startline="56" endline="57" pcid="4702">
  function totalSupply() public view returns (uint256);
  function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/MainToken.sol" startline="8" endline="9" pcid="4638">
  function totalSupply() public view returns (uint256);
  function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="8" endline="9" pcid="2807">
    function name() public view returns (string);
    function symbol() public view returns (string);
</source>
<source file="systems/smart_contracts/ProxyERC20.sol" startline="330" endline="332" pcid="5884">
    function totalSupply() public view returns (uint);

    function balanceOf(address owner) public view returns (uint);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="64" endline="65" pcid="20">
    function totalSupply() public view returns (uint256);
    function balanceOf(address _holder) public view returns (uint256);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="227" endline="228" pcid="841">
    function getWLThresholdBalance() external view returns (uint256);
    function getMaxWLAmount(address) external view returns(uint256);
</source>
<source file="systems/smart_contracts/ProxyERC20.sol" startline="343" endline="344" pcid="5890">
    function name() public view returns (string);
    function symbol() public view returns (string);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="270" endline="271" pcid="876">
    function getMembersNumber() external view returns (uint);
    function getMemberAddressByIndex(uint8) external view returns (address);
</source>
<source file="systems/smart_contracts/magesh.sol" startline="339" endline="341" pcid="4635">
  function price() external view returns (uint256);

}
</source>
<source file="systems/smart_contracts/ProxyERC20.sol" startline="344" endline="345" pcid="5891">
    function symbol() public view returns (string);
    function decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/DGC.sol" startline="49" endline="50" pcid="2515">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="555" endline="558" pcid="135">
    function price() view public returns(uint256);
    //function costOfTxShares() view public returns(uint256);
    
	function calcTimedQuota(uint256 _rest, uint256 _full, uint256 _timespan, uint256 _period) public pure returns (uint256);
</source>
<source file="systems/smart_contracts/magesh.sol" startline="81" endline="83" pcid="4615">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/DcorpDissolvementProposal.sol" startline="23" endline="32" pcid="2328">
    function totalSupply() external view returns (uint);


    /** 
     * Get balance of `_owner` 
     * 
     * @param _owner The address from which the balance will be retrieved
     * @return The balance
     */
    function balanceOf(address _owner) external view returns (uint);
</source>
<source file="systems/smart_contracts/BitcoinDigital.sol" startline="42" endline="43" pcid="1221">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/ProxyERC20.sol" startline="345" endline="347" pcid="5892">
    function decimals() public view returns (uint8);

    event Transfer(
</source>
<source file="systems/smart_contracts/FixedSupplyToken.sol" startline="49" endline="50" pcid="3600">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/QTChain.sol" startline="17" endline="22" pcid="5902">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/RaffleTicket.sol" startline="145" endline="150" pcid="5954">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="62" endline="63" pcid="18">
    function symbol() public view returns (string);
    function decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/RDTv1.sol" startline="10" endline="11" pcid="5984">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/AMAToken.sol" startline="17" endline="22" pcid="642">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ReferralTracker.sol" startline="95" endline="100" pcid="6017">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="247" endline="248" pcid="857">
    function getTotalDeployer() external view returns(uint256);
    function getTotalATContracts() external view returns(uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="99" endline="100" pcid="35">
    function token_symbol() public view returns (string);
    function token_decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/Faireum.sol" startline="249" endline="251" pcid="3564">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="250" endline="251" pcid="860">
    function getTotalFPContracts() external view returns(uint256);
    function getContractsByIndex(uint256) external view returns (address, address, address, address);
</source>
<source file="systems/smart_contracts/MAdvcedWoken.sol" startline="15" endline="17" pcid="4590">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ReservedTokensFinalizeAgent.sol" startline="302" endline="304" pcid="6092">
  function isSane() public constant returns (bool);

  function distributeReservedTokens(uint reservedTokensDistributionBatch);
</source>
<source file="systems/smart_contracts/ABCToken.sol" startline="15" endline="20" pcid="299">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/LuckyAdvcedWoken.sol" startline="15" endline="17" pcid="4551">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ReservedTokensFinalizeAgent.sol" startline="939" endline="944" pcid="6130">
  function isCrowdsaleFull() public constant returns (bool);

  /**
   * Create new tokens or transfer issued tokens to the investor depending on the cap model.
   */
  function assignTokens(address receiver, uint tokenAmount) private;
</source>
<source file="systems/smart_contracts/ROCKEX.sol" startline="8" endline="9" pcid="6195">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/SAMPLE.sol" startline="53" endline="54" pcid="6247">
	function totalSupply() public view returns (uint);
	function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/SapientiaCharlesToken.sol" startline="49" endline="50" pcid="6271">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/AHLE.sol" startline="44" endline="45" pcid="398">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="9" endline="10" pcid="2808">
    function symbol() public view returns (string);
    function decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="63" endline="64" pcid="19">
    function decimals() public view returns (uint8);
    function totalSupply() public view returns (uint256);
</source>
<source file="systems/smart_contracts/DcorpDissolvementProposal.sol" startline="265" endline="274" pcid="2345">
    function getObserverCount() external view returns (uint);


    /**
     * Gets the observer at `_index`
     * 
     * @param _index The index of the observer
     * @return The observers address
     */
    function getObserverAtIndex(uint _index) external view returns (address);
</source>
<source file="systems/smart_contracts/SBC.sol" startline="289" endline="291" pcid="6332">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="23" endline="25" pcid="6408">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Factory.sol" startline="271" endline="272" pcid="3495">
    function getFactoryAddress() external view returns(address);
}
</source>
<source file="systems/smart_contracts/ContractCoffeeToken.sol" startline="45" endline="46" pcid="1975">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/Factory.sol" startline="263" endline="264" pcid="3492">
    function getFactoryAddress() external view returns(address);
}
</source>
<source file="systems/smart_contracts/Factory.sol" startline="256" endline="257" pcid="3489">
    function getFactoryAddress() external view returns(address);
}
</source>
<source file="systems/smart_contracts/Factory.sol" startline="244" endline="245" pcid="3481">
    function getWLLength() external view returns(uint256);
    function setNewThreshold(uint256) external;
</source>
<source file="systems/smart_contracts/Factory.sol" startline="242" endline="243" pcid="3479">
    function getWLThresholdBalance() external view returns (uint256);
    function getMaxWLAmount(address) external view returns(uint256);
</source>
<source file="systems/smart_contracts/ContractCargoberToken.sol" startline="45" endline="46" pcid="1953">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/DcorpDissolvementProposal.sol" startline="438" endline="447" pcid="2356">
    function getOwnerCount() public view returns (uint);


    /**
     * Gets the owner at `_index`
     *
     * @param _index The index of the owner
     * @return The address of the owner found at `_index`
     */
    function getOwnerAt(uint _index) public view returns (address);
</source>
<source file="systems/smart_contracts/CMRPDCrowdsale.sol" startline="17" endline="22" pcid="1744">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="96" endline="97" pcid="2843">
    function token_totalSupply() public view returns (uint256);
    function token_balanceOf(address _owner) public view returns (uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="11" endline="12" pcid="4">
    function totalSupply() public view returns (uint256);
    function balanceOf(address _holder) public view returns (uint256);
</source>
<source file="systems/smart_contracts/AdminUpgradeabilityProxy.sol" startline="28" endline="36" pcid="349">
    function _implementation() internal view returns (address);

    /**
     * @dev Delegates execution to an implementation contract.
     * This is a low level function that doesn't return to its internal call site.
     * It will return to the external caller whatever the implementation returns.
     * @param implementation Address to delegate.
     */
    function _delegate(address implementation) internal {
</source>
<source file="systems/smart_contracts/Factory.sol" startline="211" endline="212" pcid="3452">
    function getWalletOnTopAddress() external view returns (address);
    function setWalletOnTopAddress(address) external returns(address);
</source>
<source file="systems/smart_contracts/Factory.sol" startline="210" endline="211" pcid="3451">
    function getMinterAddress() external view returns(address);
    function getWalletOnTopAddress() external view returns (address);
</source>
<source file="systems/smart_contracts/Factory.sol" startline="196" endline="197" pcid="3443">
    function totalSupply() external view returns (uint256);
    function balanceOf(address owner) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Factory.sol" startline="195" endline="196" pcid="3442">
    function decimals() external view returns (uint8);
    function totalSupply() external view returns (uint256);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="100" endline="102" pcid="36">
    function token_decimals() public view returns (uint8);
    
    function token_totalSupply() public view returns (uint256);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="94" endline="96" pcid="2842">
    function token_decimals() public view returns (uint8);
    
    function token_totalSupply() public view returns (uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="109" endline="110" pcid="6423">
    function getTotalDeployFees() external view returns (uint256);
    function isFactoryDeployer(address) external view returns(bool);
</source>
<source file="systems/smart_contracts/ALBToken.sol" startline="195" endline="197" pcid="579">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/GAToken.sol" startline="121" endline="126" pcid="4031">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="196" endline="197" pcid="814">
    function getWalletOnTopAddress() external view returns (address);
    function setWalletOnTopAddress(address) external returns(address);
</source>
<source file="systems/smart_contracts/LBBT.sol" startline="40" endline="41" pcid="4536">
  function totalSupply() public view returns (uint256);
  function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/Authorization.sol" startline="95" endline="100" pcid="945">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="114" endline="115" pcid="6428">
    function getTotalDeployer() external view returns(uint256);
    function getTotalATContracts() external view returns(uint256);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="93" endline="94" pcid="2841">
    function token_symbol() public view returns (string);
    function token_decimals() public view returns (uint8);
</source>
<source file="systems/smart_contracts/LanceToken.sol" startline="50" endline="51" pcid="4514">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/BFGToken.sol" startline="43" endline="44" pcid="1181">
  function totalSupply() public view returns (uint256);
  function balanceOf(address addr) public view returns (uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="115" endline="116" pcid="6429">
    function getTotalATContracts() external view returns(uint256);
    function getTotalTContracts() external view returns(uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="116" endline="117" pcid="6430">
    function getTotalTContracts() external view returns(uint256);
    function getTotalFPContracts() external view returns(uint256);
</source>
<source file="systems/smart_contracts/SeedDex.sol" startline="117" endline="118" pcid="6431">
    function getTotalFPContracts() external view returns(uint256);
    function getContractsByIndex(uint256) external view returns (address, address, address, address);
</source>
<source file="systems/smart_contracts/Exzie.sol" startline="42" endline="43" pcid="3410">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="10" endline="11" pcid="2809">
    function decimals() public view returns (uint8);
    function totalSupply() public view returns (uint256);
</source>
<source file="systems/smart_contracts/SistContract.sol" startline="36" endline="37" pcid="6515">
  function totalSupply() public view returns (uint256);
  function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/BIBCOINID.sol" startline="50" endline="51" pcid="1199">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="92" endline="93" pcid="2840">
    function token_name() public view returns (string);
    function token_symbol() public view returns (string);
</source>
<source file="systems/smart_contracts/SolaToken.sol" startline="35" endline="36" pcid="6577">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="248" endline="249" pcid="858">
    function getTotalATContracts() external view returns(uint256);
    function getTotalTContracts() external view returns(uint256);
</source>
<source file="systems/smart_contracts/SparksterTokenSwap.sol" startline="421" endline="422" pcid="6613">
	function totalSupply() public view returns (uint256);
	function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/STPCToken.sol" startline="179" endline="181" pcid="6724">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/BEX.sol" startline="8" endline="9" pcid="1159">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/SuperMarket.sol" startline="14" endline="16" pcid="6756">
    function totalSupply() external view returns (uint256);

    function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/CRUSH.sol" startline="8" endline="9" pcid="2144">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/TDCToken.sol" startline="74" endline="75" pcid="6978">
    function decimals() external view returns (uint256);
    function totalSupply() external view returns (uint256);
</source>
<source file="systems/smart_contracts/TDCToken.sol" startline="75" endline="76" pcid="6979">
    function totalSupply() external view returns (uint256);
    function balanceOf(address owner) external view returns (uint256);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="20" endline="25" pcid="7011">
    function totalSupply() external view returns (uint256);

    /**
     * @dev Returns the amount of tokens owned by `account`.
     */
    function balanceOf(address account) external view returns (uint256);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="496" endline="497" pcid="7042">
    function getMinterAddress() external view returns(address);
    function getWalletOnTopAddress() external view returns (address);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="497" endline="498" pcid="7043">
    function getWalletOnTopAddress() external view returns (address);
    function setWalletOnTopAddress(address) external returns(address);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="528" endline="529" pcid="7070">
    function getWLThresholdBalance() external view returns (uint256);
    function getMaxWLAmount(address) external view returns(uint256);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="530" endline="531" pcid="7072">
    function getWLLength() external view returns(uint256);
    function setNewThreshold(uint256) external;
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="61" endline="62" pcid="2826">
    function totalSupply() public view returns (uint256);
    function balanceOf(address _holder) public view returns (uint256);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="542" endline="543" pcid="7080">
    function decimals() external view returns (uint8);
    function paused() external view returns (bool);
</source>
<source file="systems/smart_contracts/Comet.sol" startline="8" endline="9" pcid="1912">
  function totalSupply() external view returns (uint256);
  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/Crowdsale.sol" startline="42" endline="43" pcid="2040">
    function totalSupply() public view returns (uint256);
    function balanceOf(address who) public view returns (uint256);
</source>
<source file="systems/smart_contracts/DummyToken.sol" startline="11" endline="12" pcid="2810">
    function totalSupply() public view returns (uint256);
    function balanceOf(address _holder) public view returns (uint256);
</source>
<source file="systems/smart_contracts/KingToken.sol" startline="9" endline="10" pcid="4475">
    function totalSupply() public constant returns (uint);
    function balanceOf(address tokenOwner) public constant returns (uint balance);
</source>
<source file="systems/smart_contracts/$martFund.sol" startline="102" endline="103" pcid="37">
    function token_totalSupply() public view returns (uint256);
    function token_balanceOf(address _owner) public view returns (uint256);
</source>
<source file="systems/smart_contracts/KGCMortage.sol" startline="760" endline="761" pcid="4463">
    function totalSupply() public view returns (uint);
    function balanceOf(address tokenOwner) public view returns (uint balance);
</source>
<source file="systems/smart_contracts/CNG.sol" startline="12" endline="14" pcid="1840">
  function totalSupply() external view returns (uint256);

  function balanceOf(address who) external view returns (uint256);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="543" endline="544" pcid="7081">
    function paused() external view returns (bool);
    function pause() external;
</source>
<source file="systems/smart_contracts/ATDeployer.sol" startline="195" endline="196" pcid="813">
    function getMinterAddress() external view returns(address);
    function getWalletOnTopAddress() external view returns (address);
</source>
<source file="systems/smart_contracts/TDeployer.sol" startline="746" endline="747" pcid="7111">
    function getFactoryAddress() external view returns(address);
}
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
        return _Tokenname;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns(string memory) {
    return _name;
  }
name() external view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _Name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
        return _name;
    }
name() public view returns (string memory) {
        return _name;
    }
name() public view returns(string memory) {
    return _name;
  }
name() public view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() external view returns (string memory) {
        return _name;
    }
name() public view returns (string){
        return operator.token_name();
    }
name() public pure returns (string _name) {
        return TOKEN_NAME;
    }
name() public view returns (string){
        // Immutable static call from target contract
        return IERC20(target).name();
    }
